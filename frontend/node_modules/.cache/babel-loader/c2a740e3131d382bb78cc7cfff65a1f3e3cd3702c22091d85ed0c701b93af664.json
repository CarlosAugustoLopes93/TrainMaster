{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{useParams}from'react-router-dom';import'bootstrap/dist/css/bootstrap.min.css';import{Card,Button,Spinner,Alert}from'react-bootstrap';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const WorkoutListPage=()=>{const[workouts,setWorkouts]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState('');const{id}=useParams();// Pegando o 'id' da URL (que é o user_id)\nuseEffect(()=>{const fetchWorkouts=async()=>{if(!id){console.error('ID não fornecido na URL');return;}const userId=parseInt(id,10);if(isNaN(userId)){console.error('ID inválido');return;}try{console.log('Fazendo requisição para treinos...');const response=await axios.get(`http://localhost:5000/api/workouts/${userId}`);console.log('Resposta recebida dos treinos:',response.data);// Verifique se a resposta contém treinos\nif(response.data.length===0){console.log('Nenhum treino encontrado.');}else{// Agora vamos buscar o nome do treinador para cada treino\nconst workoutsWithTrainerName=await Promise.all(response.data.map(async workout=>{try{// Realizando uma requisição para obter o nome do treinador\nconst trainerResponse=await axios.get(`http://localhost:5000/api/trainers/${workout.trainer_id}`);const trainerName=trainerResponse.data.name;// Ajuste o campo conforme o formato da resposta da API\nreturn{...workout,trainer_name:trainerName||'Nome do treinador não encontrado'};}catch(error){console.error('Erro ao buscar o nome do treinador',error);return{...workout,trainer_name:'Nome do treinador não encontrado'};}}));setWorkouts(workoutsWithTrainerName);}}catch(error){console.error('Erro ao carregar os workouts',error);setError('Erro ao carregar os treinos. Tente novamente mais tarde.');}finally{setLoading(false);}};fetchWorkouts();},[id]);// Dependência do id\nif(loading){return/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(Spinner,{animation:\"border\",variant:\"success\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Carregando...\"})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"container mt-5\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-center mb-4\",children:\"Lista de Treinos\"}),error&&/*#__PURE__*/_jsx(Alert,{variant:\"danger\",children:error}),workouts.length===0?/*#__PURE__*/_jsxs(Alert,{variant:\"info\",className:\"text-center\",children:[\"Nenhum treino encontrado para o usu\\xE1rio com ID \",id,\".\"]}):/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:workouts.map(workout=>/*#__PURE__*/_jsx(\"div\",{className:\"col-md-4 mb-4\",children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(Card.Title,{children:workout.name}),/*#__PURE__*/_jsxs(Card.Subtitle,{className:\"mb-2 text-muted\",children:[\"Dura\\xE7\\xE3o: \",workout.duration,\" minutos\"]}),/*#__PURE__*/_jsx(Card.Text,{children:workout.description}),/*#__PURE__*/_jsxs(Card.Text,{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Treinador:\"}),\" \",workout.trainer_id,\" - \",workout.trainer_name]}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:()=>alert('Visualizando mais detalhes do treino!'),children:\"Ver Detalhes\"})]})})},workout.id))})]});};export default WorkoutListPage;","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","Card","Button","Spinner","Alert","jsx","_jsx","jsxs","_jsxs","WorkoutListPage","workouts","setWorkouts","loading","setLoading","error","setError","id","fetchWorkouts","console","userId","parseInt","isNaN","log","response","get","data","length","workoutsWithTrainerName","Promise","all","map","workout","trainerResponse","trainer_id","trainerName","name","trainer_name","className","children","animation","variant","Body","Title","Subtitle","duration","Text","description","onClick","alert"],"sources":["C:/Users/augus/OneDrive/Documentos/TrainMaster/trainmaster/frontend/src/WorkoutListPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Card, Button, Spinner, Alert } from 'react-bootstrap';\r\n\r\nconst WorkoutListPage = () => {\r\n  const [workouts, setWorkouts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const { id } = useParams(); // Pegando o 'id' da URL (que é o user_id)\r\n\r\n  useEffect(() => {\r\n    const fetchWorkouts = async () => {\r\n      if (!id) {\r\n        console.error('ID não fornecido na URL');\r\n        return;\r\n      }\r\n\r\n      const userId = parseInt(id, 10);\r\n\r\n      if (isNaN(userId)) {\r\n        console.error('ID inválido');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        console.log('Fazendo requisição para treinos...');\r\n        const response = await axios.get(`http://localhost:5000/api/workouts/${userId}`);\r\n        console.log('Resposta recebida dos treinos:', response.data);\r\n\r\n        // Verifique se a resposta contém treinos\r\n        if (response.data.length === 0) {\r\n          console.log('Nenhum treino encontrado.');\r\n        } else {\r\n          // Agora vamos buscar o nome do treinador para cada treino\r\n          const workoutsWithTrainerName = await Promise.all(\r\n            response.data.map(async (workout) => {\r\n              try {\r\n                // Realizando uma requisição para obter o nome do treinador\r\n                const trainerResponse = await axios.get(`http://localhost:5000/api/trainers/${workout.trainer_id}`);\r\n                const trainerName = trainerResponse.data.name;  // Ajuste o campo conforme o formato da resposta da API\r\n                return {\r\n                  ...workout,\r\n                  trainer_name: trainerName || 'Nome do treinador não encontrado',\r\n                };\r\n              } catch (error) {\r\n                console.error('Erro ao buscar o nome do treinador', error);\r\n                return {\r\n                  ...workout,\r\n                  trainer_name: 'Nome do treinador não encontrado',\r\n                };\r\n              }\r\n            })\r\n          );\r\n\r\n          setWorkouts(workoutsWithTrainerName);\r\n        }\r\n      } catch (error) {\r\n        console.error('Erro ao carregar os workouts', error);\r\n        setError('Erro ao carregar os treinos. Tente novamente mais tarde.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchWorkouts();\r\n  }, [id]); // Dependência do id\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"text-center\">\r\n        <Spinner animation=\"border\" variant=\"success\" />\r\n        <p>Carregando...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1 className=\"text-center mb-4\">Lista de Treinos</h1>\r\n\r\n      {error && (\r\n        <Alert variant=\"danger\">\r\n          {error}\r\n        </Alert>\r\n      )}\r\n\r\n      {workouts.length === 0 ? (\r\n        <Alert variant=\"info\" className=\"text-center\">\r\n          Nenhum treino encontrado para o usuário com ID {id}.\r\n        </Alert>\r\n      ) : (\r\n        <div className=\"row\">\r\n          {workouts.map((workout) => (\r\n            <div className=\"col-md-4 mb-4\" key={workout.id}>\r\n              <Card>\r\n                <Card.Body>\r\n                  <Card.Title>{workout.name}</Card.Title>\r\n                  <Card.Subtitle className=\"mb-2 text-muted\">Duração: {workout.duration} minutos</Card.Subtitle>\r\n                  <Card.Text>{workout.description}</Card.Text>\r\n                  {/* Exibindo ID e Nome do Treinador */}\r\n                  <Card.Text>\r\n                    <strong>Treinador:</strong> {workout.trainer_id} - {workout.trainer_name}\r\n                  </Card.Text>\r\n                  <Button variant=\"primary\" onClick={() => alert('Visualizando mais detalhes do treino!')}>\r\n                    Ver Detalhes\r\n                  </Button>\r\n                </Card.Body>\r\n              </Card>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorkoutListPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}