{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\augus\\\\OneDrive\\\\Documentos\\\\TrainMaster\\\\trainmaster\\\\frontend\\\\src\\\\WorkoutListPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Card, Button, Spinner, Alert } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WorkoutListPage = () => {\n  _s();\n  const [workouts, setWorkouts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const {\n    id\n  } = useParams(); // Pegando o 'id' da URL (que é o user_id)\n\n  useEffect(() => {\n    const fetchWorkouts = async () => {\n      if (!id) {\n        console.error('ID não fornecido na URL');\n        return;\n      }\n      const userId = parseInt(id, 10);\n      if (isNaN(userId)) {\n        console.error('ID inválido');\n        return;\n      }\n      try {\n        console.log('Fazendo requisição para treinos...');\n        const response = await axios.get(`http://localhost:5000/api/workouts/${userId}`);\n        console.log('Resposta recebida dos treinos:', response.data);\n\n        // Verifique a resposta da API\n        if (response.data.length === 0) {\n          console.log('Nenhum treino encontrado.');\n        } else {\n          // Se o nome do treinador estiver dentro da resposta, você pode acessar diretamente\n          console.log('Dados dos treinos:', response.data);\n\n          // Se o nome do treinador estiver em outro campo, corrija conforme necessário.\n          const workoutsWithTrainerName = response.data.map(workout => {\n            console.log(`Treinamento ID: ${workout.id}, Trainer ID: ${workout.trainer_id}`);\n            return {\n              ...workout,\n              trainer_name: workout.trainer_name || 'Nome do treinador não encontrado' // Verificando se o nome está presente\n            };\n          });\n          setWorkouts(workoutsWithTrainerName);\n        }\n      } catch (error) {\n        console.error('Erro ao carregar os workouts', error);\n        setError('Erro ao carregar os treinos. Tente novamente mais tarde.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchWorkouts();\n  }, [id]); // Dependência do id\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        variant: \"success\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Carregando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center mb-4\",\n      children: \"Lista de Treinos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), workouts.length === 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"info\",\n      className: \"text-center\",\n      children: [\"Nenhum treino encontrado para o usu\\xE1rio com ID \", id, \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: workouts.map(workout => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4 mb-4\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: workout.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n              className: \"mb-2 text-muted\",\n              children: [\"Dura\\xE7\\xE3o: \", workout.duration, \" minutos\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: workout.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Treinador:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 21\n              }, this), \" \", workout.trainer_id, \" - \", workout.trainer_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: () => alert('Visualizando mais detalhes do treino!'),\n              children: \"Ver Detalhes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this)\n      }, workout.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(WorkoutListPage, \"YzVBiowCtZE1yqQrNHETP7bEAIY=\", false, function () {\n  return [useParams];\n});\n_c = WorkoutListPage;\nexport default WorkoutListPage;\nvar _c;\n$RefreshReg$(_c, \"WorkoutListPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","Card","Button","Spinner","Alert","jsxDEV","_jsxDEV","WorkoutListPage","_s","workouts","setWorkouts","loading","setLoading","error","setError","id","fetchWorkouts","console","userId","parseInt","isNaN","log","response","get","data","length","workoutsWithTrainerName","map","workout","trainer_id","trainer_name","className","children","animation","variant","fileName","_jsxFileName","lineNumber","columnNumber","Body","Title","name","Subtitle","duration","Text","description","onClick","alert","_c","$RefreshReg$"],"sources":["C:/Users/augus/OneDrive/Documentos/TrainMaster/trainmaster/frontend/src/WorkoutListPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Card, Button, Spinner, Alert } from 'react-bootstrap';\r\n\r\nconst WorkoutListPage = () => {\r\n  const [workouts, setWorkouts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const { id } = useParams(); // Pegando o 'id' da URL (que é o user_id)\r\n\r\n  useEffect(() => {\r\n    const fetchWorkouts = async () => {\r\n      if (!id) {\r\n        console.error('ID não fornecido na URL');\r\n        return;\r\n      }\r\n\r\n      const userId = parseInt(id, 10);\r\n\r\n      if (isNaN(userId)) {\r\n        console.error('ID inválido');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        console.log('Fazendo requisição para treinos...');\r\n        const response = await axios.get(`http://localhost:5000/api/workouts/${userId}`);\r\n        console.log('Resposta recebida dos treinos:', response.data);\r\n\r\n        // Verifique a resposta da API\r\n        if (response.data.length === 0) {\r\n          console.log('Nenhum treino encontrado.');\r\n        } else {\r\n          // Se o nome do treinador estiver dentro da resposta, você pode acessar diretamente\r\n          console.log('Dados dos treinos:', response.data);\r\n\r\n          // Se o nome do treinador estiver em outro campo, corrija conforme necessário.\r\n          const workoutsWithTrainerName = response.data.map((workout) => {\r\n            console.log(`Treinamento ID: ${workout.id}, Trainer ID: ${workout.trainer_id}`);\r\n            return {\r\n              ...workout,\r\n              trainer_name: workout.trainer_name || 'Nome do treinador não encontrado', // Verificando se o nome está presente\r\n            };\r\n          });\r\n\r\n          setWorkouts(workoutsWithTrainerName);\r\n        }\r\n      } catch (error) {\r\n        console.error('Erro ao carregar os workouts', error);\r\n        setError('Erro ao carregar os treinos. Tente novamente mais tarde.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchWorkouts();\r\n  }, [id]); // Dependência do id\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"text-center\">\r\n        <Spinner animation=\"border\" variant=\"success\" />\r\n        <p>Carregando...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1 className=\"text-center mb-4\">Lista de Treinos</h1>\r\n\r\n      {error && (\r\n        <Alert variant=\"danger\">\r\n          {error}\r\n        </Alert>\r\n      )}\r\n\r\n      {workouts.length === 0 ? (\r\n        <Alert variant=\"info\" className=\"text-center\">\r\n          Nenhum treino encontrado para o usuário com ID {id}.\r\n        </Alert>\r\n      ) : (\r\n        <div className=\"row\">\r\n          {workouts.map((workout) => (\r\n            <div className=\"col-md-4 mb-4\" key={workout.id}>\r\n              <Card>\r\n                <Card.Body>\r\n                  <Card.Title>{workout.name}</Card.Title>\r\n                  <Card.Subtitle className=\"mb-2 text-muted\">Duração: {workout.duration} minutos</Card.Subtitle>\r\n                  <Card.Text>{workout.description}</Card.Text>\r\n                  {/* Exibindo ID e Nome do Treinador */}\r\n                  <Card.Text>\r\n                    <strong>Treinador:</strong> {workout.trainer_id} - {workout.trainer_name}\r\n                  </Card.Text>\r\n                  <Button variant=\"primary\" onClick={() => alert('Visualizando mais detalhes do treino!')}>\r\n                    Ver Detalhes\r\n                  </Button>\r\n                </Card.Body>\r\n              </Card>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorkoutListPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}