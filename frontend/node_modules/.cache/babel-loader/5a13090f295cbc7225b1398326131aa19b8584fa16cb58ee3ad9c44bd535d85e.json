{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\augus\\\\OneDrive\\\\Documentos\\\\TrainMaster\\\\trainmaster\\\\frontend\\\\src\\\\WorkoutListPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom'; // Importando useParams para pegar o ID da URL\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WorkoutListPage = () => {\n  _s();\n  const [workouts, setWorkouts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const {\n    id\n  } = useParams(); // Pegando o 'id' da URL\n\n  useEffect(() => {\n    const fetchWorkouts = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/workouts');\n        console.log('Workouts recebidos:', response.data); // Verificando os dados\n        setWorkouts(response.data);\n      } catch (error) {\n        console.error('Erro ao carregar os workouts', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchWorkouts();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Se um id for fornecido na URL, filtra o treino com esse ID\n  const workoutToShow = id ? workouts.find(workout => workout.id === parseInt(id)) : null;\n  if (id && !workoutToShow) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Treino n\\xE3o encontrado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lista de Workouts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), workoutToShow ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: workoutToShow.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: workoutToShow.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Trainer ID: \", workoutToShow.trainer_id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Dura\\xE7\\xE3o: \", workoutToShow.duration, \" minutos\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // Caso contrário, exibe todos os treinos\n    _jsxDEV(\"ul\", {\n      children: workouts.map(workout => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: workout.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: workout.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Trainer ID: \", workout.trainer_id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Dura\\xE7\\xE3o: \", workout.duration, \" minutos\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)]\n      }, workout.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(WorkoutListPage, \"v6U51Bx/eeSYXsgJYjc4JvjgtXE=\", false, function () {\n  return [useParams];\n});\n_c = WorkoutListPage;\nexport default WorkoutListPage;\nvar _c;\n$RefreshReg$(_c, \"WorkoutListPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","jsxDEV","_jsxDEV","WorkoutListPage","_s","workouts","setWorkouts","loading","setLoading","id","fetchWorkouts","response","get","console","log","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","workoutToShow","find","workout","parseInt","name","description","trainer_id","duration","map","_c","$RefreshReg$"],"sources":["C:/Users/augus/OneDrive/Documentos/TrainMaster/trainmaster/frontend/src/WorkoutListPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom'; // Importando useParams para pegar o ID da URL\r\n\r\nconst WorkoutListPage = () => {\r\n  const [workouts, setWorkouts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const { id } = useParams(); // Pegando o 'id' da URL\r\n\r\n  useEffect(() => {\r\n    const fetchWorkouts = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/workouts');\r\n        console.log('Workouts recebidos:', response.data); // Verificando os dados\r\n        setWorkouts(response.data);\r\n      } catch (error) {\r\n        console.error('Erro ao carregar os workouts', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchWorkouts();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div>Carregando...</div>;\r\n  }\r\n\r\n  // Se um id for fornecido na URL, filtra o treino com esse ID\r\n  const workoutToShow = id\r\n    ? workouts.find((workout) => workout.id === parseInt(id))\r\n    : null;\r\n\r\n  if (id && !workoutToShow) {\r\n    return <div>Treino não encontrado</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Lista de Workouts</h1>\r\n\r\n      {/* Se um treino foi selecionado pela URL, exibe apenas ele */}\r\n      {workoutToShow ? (\r\n        <div>\r\n          <h2>{workoutToShow.name}</h2>\r\n          <p>{workoutToShow.description}</p>\r\n          <p>Trainer ID: {workoutToShow.trainer_id}</p>\r\n          <p>Duração: {workoutToShow.duration} minutos</p>\r\n        </div>\r\n      ) : (\r\n        // Caso contrário, exibe todos os treinos\r\n        <ul>\r\n          {workouts.map((workout) => (\r\n            <li key={workout.id}>\r\n              <h2>{workout.name}</h2>\r\n              <p>{workout.description}</p>\r\n              <p>Trainer ID: {workout.trainer_id}</p>\r\n              <p>Duração: {workout.duration} minutos</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorkoutListPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}